name: Build and publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build_extensions:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ghidra: ['latest', '10.2']
        gradle-version: ['7.3']

    steps:
      - name: Set Ghidra version
        id: ghidra_version
        run: |
          if [ ${{ matrix.ghidra }} = latest ]; then
            ghidra_version=$(curl -fLsSo /dev/null -w %{url_effective} https://github.com/NationalSecurityAgency/ghidra/releases/latest |
             grep -oP '(?<=https://github.com/NationalSecurityAgency/ghidra/releases/tag/Ghidra_).+(?=_build)')
            echo "::set-output name=full::$ghidra_version"
          else
            echo "::set-output name=full::${{ matrix.ghidra }}"
          fi

      - name: Checkout GhidraOrbis
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Get short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Setup Ghidra
        uses: er28-0652/setup-ghidra@master
        with:
          version: ${{ steps.ghidra_version.outputs.full }}
      - name: Checkout Ghidra-Cpp-Class-Analyzer
        uses: actions/checkout@v3
        with:
          repository: astrelsky/Ghidra-Cpp-Class-Analyzer
          path: Ghidra-Cpp-Class-Analyzer
      - name: Build Ghidra-Cpp-Class-Analyzer
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ matrix.gradle-version }}
          build-root-directory: Ghidra-Cpp-Class-Analyzer
          arguments: buildExtension -PGHIDRA_INSTALL_DIR=${{ env.GHIDRA_INSTALL_DIR }}
      - name: Install the class analyzer as an extension forcefully
        run: |
           mkdir -p ~/.ghidra/.ghidra_${{ steps.ghidra_version.outputs.full }}_PUBLIC/Extensions/
           unzip Ghidra-Cpp-Class-Analyzer/dist/*.zip -d ~/.ghidra/.ghidra_${{ steps.ghidra_version.outputs.full }}_PUBLIC/Extensions
      - name: Upload Ghidra-Cpp-Class-Analyzer artifact
        uses: actions/upload-artifact@v3
        with:
          path: Ghidra-Cpp-Class-Analyzer/dist/*.zip
          if-no-files-found: error
          retention-days: 14
      - name: Cleanup
        run: rm -rf Ghidra-Cpp-Class-Analyzer
      - name: Build GhidraOrbis
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ matrix.gradle-version }}
          arguments: buildExtension -PGHIDRA_INSTALL_DIR=${{ env.GHIDRA_INSTALL_DIR }}
      - name: Upload GhidraOrbis Artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.zip
          if-no-files-found: error
          retention-days: 14

  push_release:
    if: |
      github.event_name != 'pull_request' &&
      github.repository == 'astrelsky/GhidraOrbis'
    needs: build_extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create 1.0${{ GITHUB.RUN_NUMBER }} artifact/*.zip --target ${{ GITHUB.SHA }} -t 1.0${{ GITHUB.RUN_NUMBER }}
